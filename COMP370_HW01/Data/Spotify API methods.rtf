{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red153\green168\blue186;\red32\green32\blue32;\red109\green109\blue109;
}
{\*\expandedcolortbl;;\csgenericrgb\c60000\c65882\c72941;\csgenericrgb\c12549\c12549\c12549;\csgenericrgb\c42745\c42745\c42745;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 \

\f1 \cf4 /*private getAccessToken() \{\
  const headers = new HttpHeaders().set('Content-Type', 'application/x-www-form-urlencoded');\
\
  const body = new HttpParams()\
    .set('grant_type', 'client_credentials')\
    .set('client_id', this.clientID)\
    .set('scope', 'user-read-private user-read-email')\
    .set('client_secret', this.clientSecret);\
\
  return this.http.post(`$\{this.spotifyAuthBaseUrl\}`, body, \{headers\});\
\}\
\
public getArtistAlbums(artistId: string): Observable<Object> \{\
  return this.getAccessToken().pipe(\
    switchMap((tokenResponse: any) => \{\
      const accessToken = tokenResponse.access_token;\
      const headers = new HttpHeaders().set('Authorization', 'Bearer ' + accessToken);\
      return this.http.get(`$\{this.spotifyApiBaseUrl\}/artists/$\{artistId\}/albums`, \{ headers \});\
    \})\
  );\
\}\
\
public getUserSavedTracks(): Observable<Object> \{\
  return this.getAccessToken().pipe(\
    switchMap((tokenResponse: any) => \{\
      const accessToken = tokenResponse.access_token;\
      const headers = new HttpHeaders().set('Authorization', 'Bearer ' + accessToken);\
      return this.http.get(`$\{this.spotifyApiBaseUrl\}/me/playlists`, \{ headers \})\
    \})\
  )\
\}\
\
public getUser()\{\
  return this.getAccessToken().pipe(\
    switchMap((tokenResponse: any) => \{\
      const accessToken = tokenResponse.access_token;\
      const headers = new HttpHeaders().set('Authorization', 'Bearer ' + accessToken);\
      return this.http.get(`$\{this.spotifyApiBaseUrl\}/me`, \{ headers \})\
    \})\
  )\
\}*/\
}